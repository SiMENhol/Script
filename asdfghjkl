var startBet = 1;
const beforeIShouldBetT = 2;
const beforeIShouldBetCT = 2;
const beforeIShouldBetDice = 38;
const blackRedIncreaser = 2;
const greenIncreaser = 1.5;
var sinceLastTcoin = 0;
var sinceLastCTcoin = 0;
var sinceLastDicecoin = 0;
var lastBet;
var currentBet = startBet;
var activeBet = false;
var token = 0;
var btn001;
var btn_clear;
var btn_half;
var btn_2time;
var btn_bet_ct;
var btn_bet_t;
var btn_bet_dice;
var stepToPerform = 0;
var isResultVisible = false; // Flag to track if results are visible
var countdownStarted = false; // Flag to track if the countdown has started
var checkedForStreaks = false; // Flag to check if we have already checked for streaks this countdown

function bindbtns() {
    var btn_to_bind = document.getElementsByTagName('button');
    for (var i = 0; i < btn_to_bind.length; i++) {
        if (btn_to_bind[i].innerText.indexOf('+0.01') > -1) {
            btn001 = btn_to_bind[i];
        } else if (btn_to_bind[i].innerText.indexOf(' 1/2 ') > -1) {
            btn_to_bind[i].click();
            btn_half = btn_to_bind[i];
        } else if (btn_to_bind[i].innerText.indexOf(' x2 ') > -1) {
            btn_to_bind[i].click();
            btn_2time = btn_to_bind[i];
        } else if (btn_to_bind[i].innerText.indexOf(' Clear ') > -1) {
            btn_to_bind[i].click();
            btn_clear = btn_to_bind[i];
        } else if (btn_to_bind[i].innerText.indexOf(' PLACEBET ') > -1) {
            btn_to_bind[i].click();
            btn_clear = btn_to_bind[i];
        }
    }
    var btn2_to_bind = document.getElementsByClassName('bet-btn');
    btn_bet_ct = btn2_to_bind[0];
    btn_bet_dice = btn2_to_bind[1];
    btn_bet_t = btn2_to_bind[2];
}

bindbtns();

function IsItPossibleToBetNow() {
    var betButton = document.querySelector('.bet-btn');
    return betButton && betButton.offsetWidth > 0 && betButton.offsetHeight > 0;
}

function CheckIfIShouldBet() {
    updatesSinceNumber();
    if (currentBet === startBet) {
        if (beforeIShouldBetDice <= sinceLastDicecoin) {
            return 3;
        } else if (beforeIShouldBetT <= sinceLastTcoin) {
            return 1;
        } else if (beforeIShouldBetCT <= sinceLastCTcoin) {
            return 2;
        } else {
            return 0;
        }
    } else if (currentBet !== startBet) {
        return token;
    }
}

function updatesSinceNumber() {
    var latestNumber = document.getElementsByClassName('flex relative h-24')[0].children[9].innerHTML;
    if (latestNumber.includes("coin-bonus")) {
        sinceLastDicecoin = 0;
        sinceLastCTcoin++;
        sinceLastTcoin++;
        if (activeBet && token !== 3) {
            currentBet = lastBet * blackRedIncreaser;
        } else if (activeBet && token === 3) {
            currentBet = startBet;
        }
    } else if (latestNumber.includes("coin-t")) {
        sinceLastDicecoin++;
        sinceLastCTcoin++;
        sinceLastTcoin = 0;
        if (activeBet && token === 2) {
            currentBet = lastBet * blackRedIncreaser;
        } else if (activeBet && token === 3) {
            currentBet = lastBet * greenIncreaser;
        } else if (activeBet && token === 1) {
            currentBet = startBet;
        }
    } else if (latestNumber.includes("coin-ct")) {
        sinceLastDicecoin++;
        sinceLastCTcoin = 0;
        sinceLastTcoin++;
        if (activeBet && token === 1) {
            currentBet = lastBet * blackRedIncreaser;
        } else if (activeBet && token === 3) {
            currentBet = lastBet * greenIncreaser;
        } else if (activeBet && token === 2) {
            currentBet = startBet;
        }
    }
    console.log("Since last T: " + sinceLastTcoin);
    console.log("Since last CT: " + sinceLastCTcoin);
    console.log("Since last Dice: " + sinceLastDicecoin);
}

function Placebet() {
    btn_clear.click();
    for (var i = 0; i < Math.floor(currentBet); i++) {
        btn001.click();
    }
    var betAmountInRealNumber = (Math.floor(currentBet) / 100).toFixed(2);
    if (token === 1) {
        console.log("Betting " + betAmountInRealNumber + " On T");
        btn_bet_t.click();
    } else if (token === 2) {
        console.log("Betting " + betAmountInRealNumber + " On CT");
        btn_bet_ct.click();
    } else if (token === 3) {
        console.log("Betting " + betAmountInRealNumber + " On Dice");
        btn_bet_dice.click();
    }
    lastBet = currentBet;
}

// Check for countdown and result visibility
closingID = setInterval(function () {
    var spinningWheelCountdown = document.querySelector('.text-2xl.font-bold.font-numeric');

    if (spinningWheelCountdown) {
        // Check if countdown is running
        if (spinningWheelCountdown.textContent !== '0,00' && !countdownStarted) {
            countdownStarted = true; // Set flag when countdown starts
            checkedForStreaks = false; // Reset streak checking flag for the new countdown
            console.log("Countdown started, performing betting logic...");
        } else if (spinningWheelCountdown.textContent === '0,00' && countdownStarted) {
            // Reset flags after countdown ends
            countdownStarted = false;
            checkedForStreaks = false; 
        }

        // Perform betting logic only if countdown is active and we haven't checked streaks yet
        if (countdownStarted && !checkedForStreaks) {
            if (IsItPossibleToBetNow()) {
                console.log("Step 0 - Waiting to be able to place bet");
                var token2 = CheckIfIShouldBet();
                if (token2 > 0) {
                    token = token2;
                    console.log("Step 1 - Placing a bet");
                    Placebet(); // Place a bet immediately if conditions are met
                    checkedForStreaks = true; // Mark that we've checked for streaks this countdown
                } else {
                    lastBet = startBet;
                    activeBet = false;
                }
            }
        }
    }
}, 1000); // Check every second
